{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Hariprasath\\\\Documents\\\\GitHub\\\\Audit-Client\\\\Audit-Client\\\\src\\\\EmployeeWork.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\"; // assuming axios is used for API requests\nimport Navbar from \"./Navbar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EmployeeWork = () => {\n  _s();\n  // State for storing tasks, proof, and upload time for each hour\n  const [tasks, setTasks] = useState(Array(8).fill(null).map(() => ({\n    task: \"\",\n    proof: null,\n    uploadedAt: null\n  })));\n  const [assignedTasks, setAssignedTasks] = useState([]); // State for assigned tasks from adminDashboard\n  const [attendanceIndicator, setAttendanceIndicator] = useState(\"red\"); // Red for incomplete, green for complete\n\n  // State for the current date\n  const [currentDate, setCurrentDate] = useState(new Date());\n\n  // Fetch assigned tasks from adminDashboard\n  useEffect(() => {\n    const fetchAssignedTasks = async () => {\n      try {\n        const response = await axios.get('/api/adminDashboard/assignedTasks'); // Adjust URL as needed\n        setAssignedTasks(response.data);\n      } catch (error) {\n        console.error(\"Error fetching assigned tasks:\", error);\n      }\n    };\n    fetchAssignedTasks();\n  }, []);\n\n  // Update the current date and time every second\n  useEffect(() => {\n    const interval = setInterval(() => {\n      setCurrentDate(new Date());\n    }, 1000);\n    return () => clearInterval(interval); // Clean up the interval on component unmount\n  }, []);\n\n  // Handle input change for tasks and record upload time\n  const handleTaskChange = (index, task) => {\n    const newTasks = [...tasks];\n    newTasks[index] = {\n      ...newTasks[index],\n      task,\n      uploadedAt: new Date()\n    };\n    setTasks(newTasks);\n  };\n\n  // Handle file upload for proof and record upload time\n  const handleFileChange = (index, file) => {\n    const newTasks = [...tasks];\n    newTasks[index] = {\n      ...newTasks[index],\n      proof: file,\n      uploadedAt: new Date()\n    };\n    setTasks(newTasks);\n  };\n\n  // Handle submission\n  const handleSubmit = () => {\n    const allTasksCompleted = tasks.every(task => task.task !== \"\" && task.proof !== null);\n    if (allTasksCompleted) {\n      setAttendanceIndicator(\"green\");\n      alert(\"Tasks submitted successfully!\");\n    } else {\n      setAttendanceIndicator(\"red\");\n      alert(\"Please complete all tasks for each hour and upload proof.\");\n    }\n  };\n\n  // Format the current date and time\n  const formattedDate = `${currentDate.toLocaleDateString()} ${currentDate.toLocaleTimeString()}`;\n\n  // Get the real-time hour for the label (Hour 1 starts at the current hour, Hour 2 is +1, etc.)\n  const getHourLabel = hourIndex => {\n    const currentHour = currentDate.getHours();\n    const labelHour = (currentHour + hourIndex) % 24; // Handle 24-hour wrap-around\n    return labelHour;\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.pageBackground,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.container,\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Employee Work Submission\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.dateTime,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [\"Current Date and Time: \", formattedDate]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.assignedTasks,\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Assigned Tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 11\n          }, this), assignedTasks.length > 0 ? assignedTasks.map((task, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.taskItem,\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: [\"Task \", index + 1, \":\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 20\n              }, this), \" \", task.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"No tasks assigned.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.taskContainer,\n          children: tasks.map((taskObj, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            style: styles.taskRow,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [\"Hour \", index + 1, \" (\", getHourLabel(index), \":00):\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: `Task for Hour ${index + 1}`,\n              value: taskObj.task,\n              onChange: e => handleTaskChange(index, e.target.value),\n              style: styles.input\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              accept: \".png,.jpg,.jpeg,.pdf,.docx,.xlsx\",\n              onChange: e => handleFileChange(index, e.target.files[0]),\n              style: styles.fileInput\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this), taskObj.uploadedAt && /*#__PURE__*/_jsxDEV(\"span\", {\n              style: styles.uploadTime,\n              children: [\"Uploaded at: \", taskObj.uploadedAt.toLocaleTimeString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSubmit,\n          style: styles.submitButton,\n          onMouseEnter: e => e.target.style.backgroundColor = styles.submitButtonHover.backgroundColor,\n          onMouseLeave: e => e.target.style.backgroundColor = styles.submitButton.backgroundColor,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: styles.attendanceContainer,\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Attendance Indicator:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              ...styles.attendanceIndicator,\n              backgroundColor: attendanceIndicator === \"green\" ? \"green\" : \"red\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n\n// Styles\n_s(EmployeeWork, \"0iEpgJkuVTkb4FL7PfjWnNoemxU=\");\n_c = EmployeeWork;\nconst styles = {\n  pageBackground: {\n    backgroundColor: \"#FFF0F5\",\n    minHeight: \"100vh\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"20px\"\n  },\n  container: {\n    padding: \"20px\",\n    maxWidth: \"800px\",\n    width: \"100%\",\n    textAlign: \"center\",\n    backgroundColor: \"#e6f0ff\",\n    borderRadius: \"10px\",\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\"\n  },\n  dateTime: {\n    marginBottom: \"20px\",\n    fontSize: \"16px\",\n    color: \"#333\",\n    fontWeight: \"500\"\n  },\n  assignedTasks: {\n    margin: \"20px 0\",\n    textAlign: \"left\",\n    backgroundColor: \"#f9f9f9\",\n    padding: \"10px\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\"\n  },\n  taskItem: {\n    padding: \"5px 0\",\n    borderBottom: \"1px solid #ddd\"\n  },\n  taskContainer: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n    gap: \"15px\"\n  },\n  taskRow: {\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"flex-start\",\n    width: \"100%\",\n    padding: \"10px\",\n    backgroundColor: \"#ffffff\",\n    borderRadius: \"8px\",\n    boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\"\n  },\n  input: {\n    width: \"90%\",\n    padding: \"8px\",\n    margin: \"5px 0\",\n    border: \"1px solid #ccc\",\n    borderRadius: \"4px\",\n    outline: \"none\"\n  },\n  fileInput: {\n    margin: \"10px 0\"\n  },\n  uploadTime: {\n    fontSize: \"12px\",\n    color: \"#777\",\n    marginTop: \"5px\"\n  },\n  submitButton: {\n    padding: \"10px 20px\",\n    backgroundColor: \"#007bff\",\n    color: \"#fff\",\n    border: \"none\",\n    borderRadius: \"5px\",\n    cursor: \"pointer\",\n    marginTop: \"20px\",\n    transition: \"background-color 0.3s\"\n  },\n  submitButtonHover: {\n    backgroundColor: \"#0056b3\"\n  },\n  attendanceContainer: {\n    marginTop: \"20px\",\n    textAlign: \"center\"\n  },\n  attendanceIndicator: {\n    width: \"50px\",\n    height: \"50px\",\n    borderRadius: \"50%\",\n    margin: \"0 auto\",\n    border: \"3px solid #ddd\"\n  }\n};\nexport default EmployeeWork;\nvar _c;\n$RefreshReg$(_c, \"EmployeeWork\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","EmployeeWork","_s","tasks","setTasks","Array","fill","map","task","proof","uploadedAt","assignedTasks","setAssignedTasks","attendanceIndicator","setAttendanceIndicator","currentDate","setCurrentDate","Date","fetchAssignedTasks","response","get","data","error","console","interval","setInterval","clearInterval","handleTaskChange","index","newTasks","handleFileChange","file","handleSubmit","allTasksCompleted","every","alert","formattedDate","toLocaleDateString","toLocaleTimeString","getHourLabel","hourIndex","currentHour","getHours","labelHour","children","fileName","_jsxFileName","lineNumber","columnNumber","style","styles","pageBackground","container","dateTime","length","taskItem","description","taskContainer","taskObj","taskRow","type","placeholder","value","onChange","e","target","input","accept","files","fileInput","uploadTime","onClick","submitButton","onMouseEnter","backgroundColor","submitButtonHover","onMouseLeave","attendanceContainer","_c","minHeight","display","alignItems","justifyContent","padding","maxWidth","width","textAlign","borderRadius","boxShadow","marginBottom","fontSize","color","fontWeight","margin","borderBottom","flexDirection","gap","border","outline","marginTop","cursor","transition","height","$RefreshReg$"],"sources":["C:/Users/Hariprasath/Documents/GitHub/Audit-Client/Audit-Client/src/EmployeeWork.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\"; // assuming axios is used for API requests\r\nimport Navbar from \"./Navbar\";\r\n\r\nconst EmployeeWork = () => {\r\n  // State for storing tasks, proof, and upload time for each hour\r\n  const [tasks, setTasks] = useState(\r\n    Array(8).fill(null).map(() => ({ task: \"\", proof: null, uploadedAt: null }))\r\n  );\r\n  const [assignedTasks, setAssignedTasks] = useState([]); // State for assigned tasks from adminDashboard\r\n  const [attendanceIndicator, setAttendanceIndicator] = useState(\"red\"); // Red for incomplete, green for complete\r\n\r\n  // State for the current date\r\n  const [currentDate, setCurrentDate] = useState(new Date());\r\n\r\n  // Fetch assigned tasks from adminDashboard\r\n  useEffect(() => {\r\n    const fetchAssignedTasks = async () => {\r\n      try {\r\n        const response = await axios.get('/api/adminDashboard/assignedTasks'); // Adjust URL as needed\r\n        setAssignedTasks(response.data);\r\n      } catch (error) {\r\n        console.error(\"Error fetching assigned tasks:\", error);\r\n      }\r\n    };\r\n\r\n    fetchAssignedTasks();\r\n  }, []);\r\n\r\n  // Update the current date and time every second\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setCurrentDate(new Date());\r\n    }, 1000);\r\n    return () => clearInterval(interval); // Clean up the interval on component unmount\r\n  }, []);\r\n\r\n  // Handle input change for tasks and record upload time\r\n  const handleTaskChange = (index, task) => {\r\n    const newTasks = [...tasks];\r\n    newTasks[index] = { ...newTasks[index], task, uploadedAt: new Date() };\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  // Handle file upload for proof and record upload time\r\n  const handleFileChange = (index, file) => {\r\n    const newTasks = [...tasks];\r\n    newTasks[index] = { ...newTasks[index], proof: file, uploadedAt: new Date() };\r\n    setTasks(newTasks);\r\n  };\r\n\r\n  // Handle submission\r\n  const handleSubmit = () => {\r\n    const allTasksCompleted = tasks.every((task) => task.task !== \"\" && task.proof !== null);\r\n\r\n    if (allTasksCompleted) {\r\n      setAttendanceIndicator(\"green\");\r\n      alert(\"Tasks submitted successfully!\");\r\n    } else {\r\n      setAttendanceIndicator(\"red\");\r\n      alert(\"Please complete all tasks for each hour and upload proof.\");\r\n    }\r\n  };\r\n\r\n  // Format the current date and time\r\n  const formattedDate = `${currentDate.toLocaleDateString()} ${currentDate.toLocaleTimeString()}`;\r\n\r\n  // Get the real-time hour for the label (Hour 1 starts at the current hour, Hour 2 is +1, etc.)\r\n  const getHourLabel = (hourIndex) => {\r\n    const currentHour = currentDate.getHours();\r\n    const labelHour = (currentHour + hourIndex) % 24; // Handle 24-hour wrap-around\r\n    return labelHour;\r\n  };\r\n\r\n  return (\r\n    <> <Navbar />\r\n    <div style={styles.pageBackground}>\r\n      <div style={styles.container}>\r\n        <h1>Employee Work Submission</h1>\r\n\r\n        {/* Display the current date and time */}\r\n        <div style={styles.dateTime}>\r\n          <p>Current Date and Time: {formattedDate}</p>\r\n        </div>\r\n\r\n        {/* Display assigned tasks */}\r\n        <div style={styles.assignedTasks}>\r\n          <h2>Assigned Tasks</h2>\r\n          {assignedTasks.length > 0 ? (\r\n            assignedTasks.map((task, index) => (\r\n              <div key={index} style={styles.taskItem}>\r\n                <p><strong>Task {index + 1}:</strong> {task.description}</p>\r\n              </div>\r\n            ))\r\n          ) : (\r\n            <p>No tasks assigned.</p>\r\n          )}\r\n        </div>\r\n\r\n        {/* Task inputs for each hour */}\r\n        <div style={styles.taskContainer}>\r\n          {tasks.map((taskObj, index) => (\r\n            <div key={index} style={styles.taskRow}>\r\n              <label>\r\n                Hour {index + 1} ({getHourLabel(index)}:00):\r\n              </label>\r\n              <input\r\n                type=\"text\"\r\n                placeholder={`Task for Hour ${index + 1}`}\r\n                value={taskObj.task}\r\n                onChange={(e) => handleTaskChange(index, e.target.value)}\r\n                style={styles.input}\r\n              />\r\n              <input\r\n                type=\"file\"\r\n                accept=\".png,.jpg,.jpeg,.pdf,.docx,.xlsx\"\r\n                onChange={(e) => handleFileChange(index, e.target.files[0])}\r\n                style={styles.fileInput}\r\n              />\r\n              {taskObj.uploadedAt && (\r\n                <span style={styles.uploadTime}>\r\n                  Uploaded at: {taskObj.uploadedAt.toLocaleTimeString()}\r\n                </span>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        {/* Submit button */}\r\n        <button\r\n          onClick={handleSubmit}\r\n          style={styles.submitButton}\r\n          onMouseEnter={(e) => (e.target.style.backgroundColor = styles.submitButtonHover.backgroundColor)}\r\n          onMouseLeave={(e) => (e.target.style.backgroundColor = styles.submitButton.backgroundColor)}\r\n        >\r\n          Submit\r\n        </button>\r\n\r\n        {/* Attendance Indicator */}\r\n        <div style={styles.attendanceContainer}>\r\n          <p>Attendance Indicator:</p>\r\n          <div\r\n            style={{\r\n              ...styles.attendanceIndicator,\r\n              backgroundColor: attendanceIndicator === \"green\" ? \"green\" : \"red\",\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div></>\r\n  );\r\n};\r\n\r\n// Styles\r\nconst styles = {\r\n  pageBackground: {\r\n    backgroundColor: \"#FFF0F5\",\r\n    minHeight: \"100vh\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: \"20px\",\r\n  },\r\n  container: {\r\n    padding: \"20px\",\r\n    maxWidth: \"800px\",\r\n    width: \"100%\",\r\n    textAlign: \"center\",\r\n    backgroundColor: \"#e6f0ff\",\r\n    borderRadius: \"10px\",\r\n    boxShadow: \"0 4px 8px rgba(0, 0, 0, 0.1)\",\r\n  },\r\n  dateTime: {\r\n    marginBottom: \"20px\",\r\n    fontSize: \"16px\",\r\n    color: \"#333\",\r\n    fontWeight: \"500\",\r\n  },\r\n  assignedTasks: {\r\n    margin: \"20px 0\",\r\n    textAlign: \"left\",\r\n    backgroundColor: \"#f9f9f9\",\r\n    padding: \"10px\",\r\n    borderRadius: \"8px\",\r\n    boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n  },\r\n  taskItem: {\r\n    padding: \"5px 0\",\r\n    borderBottom: \"1px solid #ddd\",\r\n  },\r\n  taskContainer: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"center\",\r\n    gap: \"15px\",\r\n  },\r\n  taskRow: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    alignItems: \"flex-start\",\r\n    width: \"100%\",\r\n    padding: \"10px\",\r\n    backgroundColor: \"#ffffff\",\r\n    borderRadius: \"8px\",\r\n    boxShadow: \"0 2px 4px rgba(0, 0, 0, 0.1)\",\r\n  },\r\n  input: {\r\n    width: \"90%\",\r\n    padding: \"8px\",\r\n    margin: \"5px 0\",\r\n    border: \"1px solid #ccc\",\r\n    borderRadius: \"4px\",\r\n    outline: \"none\",\r\n  },\r\n  fileInput: {\r\n    margin: \"10px 0\",\r\n  },\r\n  uploadTime: {\r\n    fontSize: \"12px\",\r\n    color: \"#777\",\r\n    marginTop: \"5px\",\r\n  },\r\n  submitButton: {\r\n    padding: \"10px 20px\",\r\n    backgroundColor: \"#007bff\",\r\n    color: \"#fff\",\r\n    border: \"none\",\r\n    borderRadius: \"5px\",\r\n    cursor: \"pointer\",\r\n    marginTop: \"20px\",\r\n    transition: \"background-color 0.3s\",\r\n  },\r\n  submitButtonHover: {\r\n    backgroundColor: \"#0056b3\",\r\n  },\r\n  attendanceContainer: {\r\n    marginTop: \"20px\",\r\n    textAlign: \"center\",\r\n  },\r\n  attendanceIndicator: {\r\n    width: \"50px\",\r\n    height: \"50px\",\r\n    borderRadius: \"50%\",\r\n    margin: \"0 auto\",\r\n    border: \"3px solid #ddd\",\r\n  },\r\n};\r\n\r\nexport default EmployeeWork;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}